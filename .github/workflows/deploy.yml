name: Deploy to Digital Ocean

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_REPO: "priyaaank/fingoose-web"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create env file
        run: |
          cat << EOF > .env
          REACT_APP_API_URL=http://api:5000
          REACT_APP_ENV=production
          EOF

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_HUB_REPO }}:latest
            ${{ env.DOCKER_HUB_REPO }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Digital Ocean droplet
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Create network if it doesn't exist
          docker network create fingoose-network || true
          
          # Login to Docker Hub
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          
          # Pull latest image
          docker pull ${{ secrets.DOCKER_USERNAME }}/fingoose-web:latest
          
          # Stop and remove existing container
          docker stop fingoose-web || true
          docker rm fingoose-web || true
          
          # Run new container
          docker run -d \
            --name fingoose-web \
            --network fingoose-network \
            --restart unless-stopped \
            -p 80:80 \
            --add-host=host.docker.internal:host-gateway \
            -e REACT_APP_API_URL=http://fingoose-api:5000 \
            ${{ secrets.DOCKER_USERNAME }}/fingoose-web:latest
          
          # Cleanup old images
          docker image prune -f